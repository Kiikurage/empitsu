#[derive(Debug, Clone, PartialEq)]
pub enum PunctuationKind {
    Plus,
    Minus,
    Asterisk,
    Slash,
    LeftParen,
    RightParen,
    LeftBrace,
    RightBrace,
    SemiColon,
    Comma,
    Equal,
    Exclamation,
    AndAnd,
    VerticalLineVerticalLine,
    VerticalLine,
    Dot,
    Colon,
    EqualEqual,
    ExclamationEqual,
    LeftChevron,
    LeftChevronEqual,
    RightChevron,
    RightChevronEqual,
    Question,
}

impl PunctuationKind {
    pub fn get_text(&self) -> &str {
        match self {
            PunctuationKind::Plus => "+",
            PunctuationKind::Minus => "-",
            PunctuationKind::Asterisk => "*",
            PunctuationKind::Slash => "/",
            PunctuationKind::LeftParen => "(",
            PunctuationKind::RightParen => ")",
            PunctuationKind::LeftBrace => "{",
            PunctuationKind::RightBrace => "}",
            PunctuationKind::SemiColon => ";",
            PunctuationKind::Comma => ",",
            PunctuationKind::Equal => "=",
            PunctuationKind::Exclamation => "!",
            PunctuationKind::AndAnd => "&&",
            PunctuationKind::VerticalLineVerticalLine => "||",
            PunctuationKind::VerticalLine => "|",
            PunctuationKind::Dot => ".",
            PunctuationKind::Colon => ":",
            PunctuationKind::EqualEqual => "==",
            PunctuationKind::ExclamationEqual => "!=",
            PunctuationKind::LeftChevron => "<",
            PunctuationKind::LeftChevronEqual => "<=",
            PunctuationKind::RightChevron => ">",
            PunctuationKind::RightChevronEqual => ">=",
            PunctuationKind::Question => "?",
        }
    }
}